import { b as createAstro, c as createComponent, m as maybeRenderHead, d as addAttribute, r as renderComponent, F as Fragment, a as renderTemplate } from './astro/server_DRM_B0B9.mjs';
import 'kleur/colors';
import { S as ScrollAnimation } from './ScrollAnimation_DokyVXDc.mjs';

const $$Astro = createAstro("http://localhost:4321");
const $$Process = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Process;
  const {
    heading = "Our",
    headingAccent = "Process",
    subheading = "From inspection to installation, we make it simple and stress-free",
    steps,
    variant = "timeline",
    showDuration = true,
    showNumbers = true,
    background = "gradient",
    connectionLine = true
  } = Astro2.props;
  const backgroundClasses = {
    white: "bg-white",
    gray: "bg-gray-50",
    gradient: "bg-gradient-to-b from-white to-gray-50"
  };
  const stepsWithNumbers = steps.map((step, index) => ({
    ...step,
    number: step.number || String(index + 1).padStart(2, "0")
  }));
  const defaultIcons = ["\u{1F50D}", "\u{1F4CB}", "\u{1F527}", "\u{1F6E1}\uFE0F"];
  const shouldShowEmoji = (step) => {
    return step.iconType === "emoji" || !step.iconType && step.icon && step.icon.length <= 2;
  };
  return renderTemplate`${maybeRenderHead()}<section${addAttribute(`py-12 sm:py-16 lg:py-24 ${backgroundClasses[background]}`, "class")}> <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8"> ${renderComponent($$result, "ScrollAnimation", ScrollAnimation, { "animation": "fadeUp", "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result2) => renderTemplate` <div class="text-center mb-12 lg:mb-16"> <h2 class="text-3xl sm:text-4xl lg:text-5xl font-montserrat font-light mb-4"> ${heading} <span class="font-bold">${headingAccent}</span> </h2> ${subheading && renderTemplate`<p class="text-lg text-gray-600 max-w-2xl mx-auto"> ${subheading} </p>`} </div> ` })} ${variant === "timeline" ? (
    /* Timeline variant - horizontal on desktop, vertical on mobile */
    renderTemplate`${renderComponent($$result, "Fragment", Fragment, {}, { "default": ($$result2) => renderTemplate`<div class="hidden lg:block relative"> ${connectionLine && renderTemplate`<div class="absolute top-1/2 left-0 right-0 h-0.5 bg-gray-300 -translate-y-1/2"></div>`} <div${addAttribute(`grid ${stepsWithNumbers.length === 3 ? "grid-cols-3" : stepsWithNumbers.length === 4 ? "grid-cols-4" : stepsWithNumbers.length === 5 ? "grid-cols-5" : "grid-cols-2"} gap-8 relative`, "class")}> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result2, "ScrollAnimation", ScrollAnimation, { "animation": "zoomIn", "delay": index * 0.15, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result3) => renderTemplate` <div class="relative">  <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-12 h-12 bg-white rounded-full flex items-center justify-center border-4 border-primary z-10"> ${shouldShowEmoji(step) ? renderTemplate`<span class="text-xl">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : step.icon ? renderTemplate`<svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"${addAttribute(step.icon, "d")}></path> </svg>` : renderTemplate`<span class="text-xl">${defaultIcons[index % defaultIcons.length]}</span>`} </div>  <div${addAttribute(`bg-white rounded-lg shadow-lg p-6 pt-16 hover:shadow-xl transition-shadow ${step.highlight ? "ring-2 ring-primary" : ""}`, "class")}> ${showNumbers && renderTemplate`<div class="text-5xl font-bold text-gray-100 mb-2">${step.number}</div>`} <h3 class="text-xl font-semibold mb-2">${step.title}</h3> <p class="text-gray-600 text-sm mb-3">${step.description}</p> ${showDuration && step.duration && renderTemplate`<div class="flex items-center text-sm text-primary font-medium"> <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> ${step.duration} </div>`} </div> </div> ` })}`)} </div> </div> <div class="lg:hidden space-y-6"> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result2, "ScrollAnimation", ScrollAnimation, { "animation": "fadeLeft", "delay": index * 0.1, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result3) => renderTemplate` <div class="flex gap-4">  <div class="flex-shrink-0"> <div class="w-12 h-12 bg-primary text-white rounded-full flex items-center justify-center font-bold"> ${showNumbers ? step.number : shouldShowEmoji(step) ? renderTemplate`<span>${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : renderTemplate`<span>${defaultIcons[index % defaultIcons.length]}</span>`} </div> ${connectionLine && index < stepsWithNumbers.length - 1 && renderTemplate`<div class="w-0.5 h-full bg-gray-300 mx-auto mt-2"></div>`} </div>  <div class="flex-1 bg-white rounded-lg shadow p-4 sm:p-6"> <div class="flex items-center gap-2 mb-2"> ${shouldShowEmoji(step) ? renderTemplate`<span class="text-2xl">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : step.icon ? renderTemplate`<svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"${addAttribute(step.icon, "d")}></path> </svg>` : renderTemplate`<span class="text-2xl">${defaultIcons[index % defaultIcons.length]}</span>`} <h3 class="text-lg font-semibold">${step.title}</h3> </div> <p class="text-gray-600 text-sm mb-2">${step.description}</p> ${showDuration && step.duration && renderTemplate`<div class="flex items-center text-sm text-primary font-medium"> <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> ${step.duration} </div>`} </div> </div> ` })}`)} </div> ` })}`
  ) : variant === "vertical" ? (
    /* Vertical variant - always vertical with connection line */
    renderTemplate`<div class="max-w-3xl mx-auto"> <div class="relative"> ${connectionLine && renderTemplate`<div class="absolute left-8 top-0 bottom-0 w-0.5 bg-gray-300"></div>`} <div class="space-y-8"> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result, "ScrollAnimation", ScrollAnimation, { "animation": "fadeUp", "delay": index * 0.1, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result2) => renderTemplate` <div class="flex gap-6"> <div class="relative flex-shrink-0"> <div${addAttribute(`w-16 h-16 rounded-full flex items-center justify-center font-bold text-lg z-10 relative ${step.highlight ? "bg-primary text-white" : "bg-white border-4 border-primary text-primary"}`, "class")}> ${showNumbers ? step.number : shouldShowEmoji(step) ? renderTemplate`<span class="text-2xl">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : renderTemplate`<span class="text-2xl">${defaultIcons[index % defaultIcons.length]}</span>`} </div> </div> <div class="flex-grow bg-white rounded-lg shadow-lg p-6"> <div class="flex items-start justify-between mb-3"> <div> <h3 class="text-xl font-bold text-gray-900">${step.title}</h3> ${showDuration && step.duration && renderTemplate`<p class="text-sm text-primary font-medium mt-1">${step.duration}</p>`} </div> ${shouldShowEmoji(step) ? renderTemplate`<span class="text-3xl">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : step.icon ? renderTemplate`<svg class="w-8 h-8 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"${addAttribute(step.icon, "d")}></path> </svg>` : renderTemplate`<span class="text-3xl">${defaultIcons[index % defaultIcons.length]}</span>`} </div> <p class="text-gray-600">${step.description}</p> ${step.details && step.details.length > 0 && renderTemplate`<ul class="mt-4 space-y-2"> ${step.details.map((detail) => renderTemplate`<li class="flex items-start gap-2 text-sm text-gray-600"> <svg class="w-4 h-4 text-primary mt-0.5 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20"> <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path> </svg> <span>${detail}</span> </li>`)} </ul>`} </div> </div> ` })}`)} </div> </div> </div>`
  ) : variant === "cards" ? (
    /* Cards variant - grid layout */
    renderTemplate`<div${addAttribute(`grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-${Math.min(stepsWithNumbers.length, 4)} gap-6`, "class")}> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result, "ScrollAnimation", ScrollAnimation, { "animation": "fadeUp", "delay": index * 0.1, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result2) => renderTemplate` <div${addAttribute(`bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow h-full ${step.highlight ? "ring-2 ring-primary" : ""}`, "class")}> <div class="flex items-center justify-between mb-4"> ${showNumbers && renderTemplate`<span class="text-4xl font-bold text-gray-200">${step.number}</span>`} ${shouldShowEmoji(step) ? renderTemplate`<span class="text-3xl">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : step.icon ? renderTemplate`<div class="w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center"> <svg class="w-6 h-6 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"${addAttribute(step.icon, "d")}></path> </svg> </div>` : renderTemplate`<span class="text-3xl">${defaultIcons[index % defaultIcons.length]}</span>`} </div> <h3 class="text-xl font-bold mb-2">${step.title}</h3> <p class="text-gray-600 mb-3">${step.description}</p> ${showDuration && step.duration && renderTemplate`<p class="text-sm text-primary font-medium"> <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> ${step.duration} </p>`} </div> ` })}`)} </div>`
  ) : variant === "minimal" ? (
    /* Minimal variant - simple list */
    renderTemplate`<div class="max-w-3xl mx-auto"> <div class="space-y-6"> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result, "ScrollAnimation", ScrollAnimation, { "animation": "fadeUp", "delay": index * 0.1, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result2) => renderTemplate` <div class="flex items-start gap-4"> <div class="flex-shrink-0"> ${showNumbers ? renderTemplate`<span class="text-2xl font-bold text-primary">${step.number}.</span>` : renderTemplate`<div class="w-8 h-8 bg-primary/10 rounded-full flex items-center justify-center"> <svg class="w-4 h-4 text-primary" fill="currentColor" viewBox="0 0 20 20"> <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path> </svg> </div>`} </div> <div class="flex-grow"> <h3 class="text-lg font-semibold mb-1">${step.title}</h3> <p class="text-gray-600">${step.description}</p> ${showDuration && step.duration && renderTemplate`<p class="text-sm text-gray-500 mt-1">${step.duration}</p>`} </div> </div> ` })}`)} </div> </div>`
  ) : (
    /* Numbered variant - emphasis on numbers */
    renderTemplate`<div class="max-w-4xl mx-auto"> <div class="space-y-8"> ${stepsWithNumbers.map((step, index) => renderTemplate`${renderComponent($$result, "ScrollAnimation", ScrollAnimation, { "animation": "fadeUp", "delay": index * 0.1, "client:visible": true, "client:component-hydration": "visible", "client:component-path": "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/ScrollAnimation", "client:component-export": "ScrollAnimation" }, { "default": ($$result2) => renderTemplate` <div class="flex items-center gap-6 bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow"> <div class="flex-shrink-0"> <div class="w-20 h-20 bg-gradient-to-br from-primary to-blue-600 text-white rounded-lg flex items-center justify-center"> <span class="text-3xl font-bold">${step.number}</span> </div> </div> <div class="flex-grow"> <h3 class="text-xl font-bold mb-2">${step.title}</h3> <p class="text-gray-600">${step.description}</p> ${showDuration && step.duration && renderTemplate`<div class="flex items-center gap-4 mt-3"> <span class="text-sm text-primary font-medium"> <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> ${step.duration} </span> </div>`} </div> ${shouldShowEmoji(step) ? renderTemplate`<span class="text-4xl hidden sm:block">${step.icon || defaultIcons[index % defaultIcons.length]}</span>` : step.icon ? renderTemplate`<svg class="w-12 h-12 text-gray-400 hidden sm:block" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"${addAttribute(step.icon, "d")}></path> </svg>` : renderTemplate`<span class="text-4xl hidden sm:block">${defaultIcons[index % defaultIcons.length]}</span>`} </div> ` })}`)} </div> </div>`
  )} </div> </section>`;
}, "C:/Users/Pavel/Desktop/New folder/dryspace-astro/src/components/Process.astro", void 0);

export { $$Process as $ };
