---
export interface Props {
  items?: Array<{
    label: string;
    href?: string;
  }>;
  current?: string;
}

const { items = [], current } = Astro.props;

// Auto-generate breadcrumbs from URL if not provided
let breadcrumbItems = items;
if (items.length === 0 && typeof Astro.url !== 'undefined') {
  const pathSegments = Astro.url.pathname.split('/').filter(segment => segment);
  
  breadcrumbItems = [
    { label: 'Home', href: '/' }
  ];
  
  let currentPath = '';
  pathSegments.forEach((segment, index) => {
    currentPath += `/${segment}`;
    
    // Format segment label
    let label = segment
      .split('-')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
    
    // Special handling for known sections
    if (segment === 'blog') label = 'Blog';
    else if (segment === 'guides') label = 'Guides';
    else if (segment === 'services') label = 'Services';
    else if (segment === 'locations') label = 'Locations';
    else if (segment === 'tools') label = 'Tools';
    
    if (index === pathSegments.length - 1) {
      // Last item is current page
      breadcrumbItems.push({ label: current || label });
    } else {
      breadcrumbItems.push({ label, href: currentPath + '/' });
    }
  });
}
---

<nav aria-label="Breadcrumb" class="mb-6">
  <ol class="flex items-center space-x-2 text-sm">
    {breadcrumbItems.map((item, index) => (
      <>
        {index > 0 && (
          <li class="text-gray-400">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
            </svg>
          </li>
        )}
        <li>
          {item.href ? (
            <a 
              href={item.href} 
              class="text-gray-600 hover:text-blue-600 transition-colors"
            >
              {item.label}
            </a>
          ) : (
            <span class="text-gray-900 font-medium">{item.label}</span>
          )}
        </li>
      </>
    ))}
  </ol>
</nav>