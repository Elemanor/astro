---
import { ArrowRight, ExternalLink, FileText, Download } from 'lucide-react';

export interface ServiceLink {
  text: string;
  href: string;
  type?: 'internal' | 'external' | 'document' | 'download';
  description?: string;
  image?: string;
  badge?: string;
  featured?: boolean;
}

export interface Props {
  title?: string;
  subtitle?: string;
  links: ServiceLink[];
  variant?: 'list' | 'cards' | 'inline' | 'grid' | 'featured';
  showImages?: boolean;
  class?: string;
}

const { 
  title,
  subtitle,
  links,
  variant = 'list',
  showImages = true,
  class: className = ''
} = Astro.props;
---

<div class={`service-links my-12 ${className}`}>
  {(title || subtitle) && (
    <div class="text-center mb-8">
      {title && <h3 class="text-3xl md:text-4xl font-bold mb-4">{title}</h3>}
      {subtitle && <p class="text-xl text-muted-foreground max-w-3xl mx-auto">{subtitle}</p>}
    </div>
  )}
  
  {variant === 'list' && (
    <ul class="space-y-4 max-w-3xl mx-auto">
      {links.map(link => (
        <li class="group">
          <a 
            href={link.href} 
            class="flex items-center gap-4 p-4 rounded-xl bg-white shadow-md hover:shadow-xl transition-all hover:-translate-y-0.5"
            target={link.type === 'external' ? '_blank' : undefined}
            rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
          >
            <div class="flex-shrink-0 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center group-hover:bg-primary group-hover:text-white transition-all">
              {link.type === 'external' && <ExternalLink className="h-5 w-5" client:load />}
              {link.type === 'document' && <FileText className="h-5 w-5" client:load />}
              {link.type === 'download' && <Download className="h-5 w-5" client:load />}
              {(!link.type || link.type === 'internal') && <ArrowRight className="h-5 w-5 group-hover:translate-x-1 transition-transform" client:load />}
            </div>
            <div class="flex-1">
              <h4 class="font-semibold text-lg group-hover:text-primary transition-colors">{link.text}</h4>
              {link.description && (
                <p class="text-sm text-muted-foreground mt-1">{link.description}</p>
              )}
            </div>
            {link.badge && (
              <span class="px-3 py-1 bg-primary/10 text-primary text-sm font-medium rounded-full">
                {link.badge}
              </span>
            )}
          </a>
        </li>
      ))}
    </ul>
  )}
  
  {variant === 'cards' && (
    <div class="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
      {links.map(link => (
        <a 
          href={link.href}
          class="group relative overflow-hidden rounded-2xl shadow-lg hover:shadow-2xl transition-all hover:-translate-y-1 bg-white"
          target={link.type === 'external' ? '_blank' : undefined}
          rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
        >
          {showImages && link.image && (
            <div class="h-48 overflow-hidden bg-gray-100">
              <img 
                src={link.image} 
                alt={link.text}
                class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-300"
              />
            </div>
          )}
          
          <div class="p-6">
            <div class="flex items-start justify-between gap-4 mb-3">
              <h4 class="font-bold text-xl group-hover:text-primary transition-colors">
                {link.text}
              </h4>
              <div class="flex-shrink-0 w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center group-hover:bg-primary group-hover:text-white transition-all">
                {link.type === 'external' && <ExternalLink className="h-5 w-5" client:load />}
                {link.type === 'document' && <FileText className="h-5 w-5" client:load />}
                {link.type === 'download' && <Download className="h-5 w-5" client:load />}
                {(!link.type || link.type === 'internal') && <ArrowRight className="h-5 w-5 group-hover:translate-x-1 transition-transform" client:load />}
              </div>
            </div>
            
            {link.description && (
              <p class="text-muted-foreground leading-relaxed">{link.description}</p>
            )}
            
            {link.badge && (
              <div class="mt-4">
                <span class="inline-block px-3 py-1 bg-primary/10 text-primary text-sm font-medium rounded-full">
                  {link.badge}
                </span>
              </div>
            )}
          </div>
          
          {link.featured && (
            <div class="absolute top-4 right-4">
              <span class="bg-primary text-white text-xs font-bold px-3 py-1 rounded-full shadow-lg">FEATURED</span>
            </div>
          )}
        </a>
      ))}
    </div>
  )}
  
  {variant === 'inline' && (
    <div class="flex flex-wrap items-center justify-center gap-4">
      {links.map(link => (
        <a 
          href={link.href}
          class="inline-flex items-center gap-2 px-5 py-2.5 bg-white rounded-full shadow-md hover:shadow-lg hover:-translate-y-0.5 transition-all group"
          target={link.type === 'external' ? '_blank' : undefined}
          rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
        >
          <span class="font-medium text-primary group-hover:text-primary/80">{link.text}</span>
          {link.type === 'external' && <ExternalLink className="h-4 w-4 text-primary/60" client:load />}
          {(!link.type || link.type === 'internal') && <ArrowRight className="h-4 w-4 text-primary/60 group-hover:translate-x-0.5 transition-transform" client:load />}
        </a>
      ))}
    </div>
  )}
  
  {variant === 'grid' && (
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
      {links.map(link => (
        <a 
          href={link.href}
          class="group relative p-6 bg-gradient-to-br from-white to-gray-50 rounded-2xl shadow-lg hover:shadow-2xl transition-all hover:-translate-y-1"
          target={link.type === 'external' ? '_blank' : undefined}
          rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
        >
          <div class="mb-4">
            <div class="w-14 h-14 bg-gradient-to-br from-primary/20 to-primary/10 rounded-2xl flex items-center justify-center group-hover:from-primary group-hover:to-primary/90 transition-all">
              {link.type === 'external' && <ExternalLink className="h-6 w-6 text-primary group-hover:text-white" client:load />}
              {link.type === 'document' && <FileText className="h-6 w-6 text-primary group-hover:text-white" client:load />}
              {link.type === 'download' && <Download className="h-6 w-6 text-primary group-hover:text-white" client:load />}
              {(!link.type || link.type === 'internal') && <ArrowRight className="h-6 w-6 text-primary group-hover:text-white group-hover:translate-x-1 transition-all" client:load />}
            </div>
          </div>
          
          <h4 class="font-bold text-lg mb-2 group-hover:text-primary transition-colors">{link.text}</h4>
          
          {link.description && (
            <p class="text-sm text-muted-foreground leading-relaxed">{link.description}</p>
          )}
          
          {link.badge && (
            <div class="absolute top-4 right-4">
              <span class="inline-block px-2 py-1 bg-primary text-white text-xs font-bold rounded">
                {link.badge}
              </span>
            </div>
          )}
        </a>
      ))}
    </div>
  )}
  
  {variant === 'featured' && (
    <div class="space-y-8">
      {links.filter(link => link.featured).map(link => (
        <a 
          href={link.href}
          class="group block overflow-hidden rounded-3xl bg-gradient-to-r from-primary/5 to-secondary/5 shadow-xl hover:shadow-2xl transition-all"
          target={link.type === 'external' ? '_blank' : undefined}
          rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
        >
          <div class="flex flex-col md:flex-row">
            {showImages && link.image && (
              <div class="md:w-1/3 h-64 md:h-auto overflow-hidden">
                <img 
                  src={link.image} 
                  alt={link.text}
                  class="w-full h-full object-cover group-hover:scale-110 transition-transform duration-500"
                />
              </div>
            )}
            
            <div class="flex-1 p-8 md:p-12">
              <div class="flex items-start justify-between gap-6">
                <div>
                  <h4 class="text-3xl font-bold mb-4 group-hover:text-primary transition-colors">
                    {link.text}
                  </h4>
                  
                  {link.description && (
                    <p class="text-lg text-muted-foreground leading-relaxed mb-6">
                      {link.description}
                    </p>
                  )}
                  
                  <div class="inline-flex items-center gap-2 text-primary font-medium">
                    <span>Learn More</span>
                    <ArrowRight className="h-5 w-5 group-hover:translate-x-2 transition-transform" client:load />
                  </div>
                </div>
                
                <div class="flex-shrink-0 w-16 h-16 bg-white rounded-2xl shadow-lg flex items-center justify-center group-hover:bg-primary group-hover:text-white transition-all">
                  {link.type === 'external' && <ExternalLink className="h-8 w-8" client:load />}
                  {link.type === 'document' && <FileText className="h-8 w-8" client:load />}
                  {link.type === 'download' && <Download className="h-8 w-8" client:load />}
                  {(!link.type || link.type === 'internal') && <ArrowRight className="h-8 w-8" client:load />}
                </div>
              </div>
              
              {link.badge && (
                <div class="mt-6">
                  <span class="inline-block px-4 py-2 bg-primary text-white font-bold rounded-full shadow-md">
                    {link.badge}
                  </span>
                </div>
              )}
            </div>
          </div>
        </a>
      ))}
      
      <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
        {links.filter(link => !link.featured).map(link => (
          <a 
            href={link.href}
            class="group p-6 bg-white rounded-xl shadow-md hover:shadow-xl transition-all hover:-translate-y-0.5"
            target={link.type === 'external' ? '_blank' : undefined}
            rel={link.type === 'external' ? 'noopener noreferrer' : undefined}
          >
            <div class="flex items-center gap-4">
              <div class="w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center group-hover:bg-primary group-hover:text-white transition-all">
                {link.type === 'external' && <ExternalLink className="h-5 w-5" client:load />}
                {link.type === 'document' && <FileText className="h-5 w-5" client:load />}
                {link.type === 'download' && <Download className="h-5 w-5" client:load />}
                {(!link.type || link.type === 'internal') && <ArrowRight className="h-5 w-5 group-hover:translate-x-1 transition-transform" client:load />}
              </div>
              
              <div class="flex-1">
                <h4 class="font-semibold group-hover:text-primary transition-colors">{link.text}</h4>
                {link.description && (
                  <p class="text-sm text-muted-foreground mt-1">{link.description}</p>
                )}
              </div>
            </div>
          </a>
        ))}
      </div>
    </div>
  )}
</div>