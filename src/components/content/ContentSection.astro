---
export interface Props {
  title?: string;
  subtitle?: string;
  variant?: 'default' | 'highlight' | 'warning' | 'info' | 'dark' | 'gradient' | 'pattern';
  centered?: boolean;
  backgroundImage?: string;
  overlayOpacity?: number;
  fullWidth?: boolean;
  class?: string;
}

const { 
  title, 
  subtitle, 
  variant = 'default',
  centered = false,
  backgroundImage,
  overlayOpacity = 0.7,
  fullWidth = false,
  class: className = '' 
} = Astro.props;

const variantClasses = {
  default: 'bg-white',
  highlight: 'bg-gradient-to-r from-primary/10 to-primary/5 border-l-4 border-primary shadow-lg',
  warning: 'bg-gradient-to-br from-yellow-50 to-orange-50 border-l-4 border-yellow-500 shadow-md',
  info: 'bg-gradient-to-br from-blue-50 to-cyan-50 border-l-4 border-blue-500 shadow-md',
  dark: 'bg-gray-900 text-white',
  gradient: 'bg-gradient-to-br from-primary/20 via-secondary/20 to-primary/10',
  pattern: 'bg-muted'
};

const paddingClasses = fullWidth 
  ? 'py-16 md:py-24' 
  : 'py-12 md:py-16 px-6 md:px-8 rounded-2xl my-8';
---

<div class={`content-section relative overflow-hidden ${paddingClasses} ${variantClasses[variant]} ${className}`}>
  {backgroundImage && (
    <>
      <div 
        class="absolute inset-0 bg-cover bg-center bg-no-repeat" 
        style={`background-image: url('${backgroundImage}');`}
      ></div>
      <div 
        class="absolute inset-0 bg-black" 
        style={`opacity: ${overlayOpacity};`}
      ></div>
    </>
  )}
  
  <div class={`relative z-10 ${fullWidth ? 'container mx-auto px-6' : ''}`}>
    {(title || subtitle) && (
      <div class={`mb-8 ${centered ? 'text-center' : ''}`}>
        {title && (
          <h2 class={`text-3xl md:text-4xl font-bold ${
            variant === 'dark' || backgroundImage ? 'text-white' : 'text-foreground'
          } mb-4`}>
            {title}
          </h2>
        )}
        {subtitle && (
          <p class={`text-xl ${
            variant === 'dark' || backgroundImage ? 'text-gray-200' : 'text-muted-foreground'
          } max-w-3xl ${centered ? 'mx-auto' : ''}`}>
            {subtitle}
          </p>
        )}
      </div>
    )}
    <div class={`prose prose-lg max-w-none ${
      centered ? 'text-center' : ''
    } ${
      variant === 'dark' || backgroundImage ? 'prose-invert' : ''
    }`}>
      <slot />
    </div>
  </div>
  
  {variant === 'pattern' && (
    <div class="absolute inset-0 opacity-5 pointer-events-none" style="background-image: url('data:image/svg+xml,%3Csvg width=\"60\" height=\"60\" viewBox=\"0 0 60 60\" xmlns=\"http://www.w3.org/2000/svg\"%3E%3Cg fill=\"none\" fill-rule=\"evenodd\"%3E%3Cg fill=\"%23000000\" fill-opacity=\"1\"%3E%3Cpath d=\"M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z\"/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>
  )}
</div>