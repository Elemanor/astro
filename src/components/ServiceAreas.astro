---
// Service Areas Section from Hugo
const mainAreas = [
  {
    title: "Toronto Waterproofing",
    description: "Serving all Toronto neighborhoods from downtown to Scarborough. Expert knowledge of local soil conditions and building codes.",
    link: "/locations/toronto-basement-waterproofing/",
    linkText: "Toronto Services"
  },
  {
    title: "Mississauga Services",
    description: "Complete waterproofing solutions for Mississauga homes. From Port Credit to Meadowvale, we know your neighborhood.",
    link: "/locations/mississauga-basement-waterproofing/",
    linkText: "Mississauga Services"
  },
  {
    title: "Hamilton & Burlington",
    description: "Protecting homes across Hamilton Mountain to Burlington's lakefront. Specialized solutions for escarpment properties.",
    link: "/locations/hamilton-basement-waterproofing/",
    linkText: "Hamilton Services"
  }
];

const locationGroups = [
  {
    title: "Toronto Districts",
    locations: [
      { name: "North York", link: "/locations/north-york-basement-waterproofing/" },
      { name: "Scarborough", link: "/locations/scarborough-basement-waterproofing/" },
      { name: "Etobicoke", link: "/locations/etobicoke-basement-waterproofing/" },
      { name: "East York", link: "/locations/east-york-waterproofing/" },
      { name: "Downtown Toronto", link: "/locations/downtown-toronto-waterproofing/" }
    ]
  },
  {
    title: "York Region",
    locations: [
      { name: "Vaughan", link: "/locations/vaughan-basement-waterproofing/" },
      { name: "Richmond Hill", link: "/locations/richmond-hill-basement-waterproofing/" },
      { name: "Markham", link: "/locations/markham-basement-waterproofing/" },
      { name: "Newmarket", link: "/locations/newmarket-basement-waterproofing/" }
    ]
  },
  {
    title: "Peel Region",
    locations: [
      { name: "Brampton", link: "/locations/brampton-basement-waterproofing/" },
      { name: "Mississauga", link: "/locations/mississauga-basement-waterproofing/" }
    ]
  },
  {
    title: "Halton Region",
    locations: [
      { name: "Oakville", link: "/locations/oakville-basement-waterproofing/" },
      { name: "Burlington", link: "/locations/burlington-basement-waterproofing/" }
    ]
  },
  {
    title: "Durham Region",
    locations: [
      { name: "Pickering", link: "/locations/pickering-basement-waterproofing/" },
      { name: "Ajax", link: "/locations/ajax-basement-waterproofing/" }
    ]
  }
];
---

<section class="py-20 bg-gray-50">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <span class="text-blue-600 font-semibold uppercase tracking-wider">Service Areas</span>
      <h2 class="text-4xl font-bold mt-2 mb-4">Serving Toronto & The GTA</h2>
      <p class="text-lg text-gray-700 max-w-3xl mx-auto">
        Local Expertise, Trusted Results
      </p>
    </div>
    
    <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
      {mainAreas.map((area) => (
        <div class="bg-white border-2 border-gray-200 rounded-lg p-6 hover:border-blue-600 hover:-translate-y-1 transition-all shadow-lg hover:shadow-xl">
          <h3 class="text-2xl font-bold text-blue-600 mb-3">{area.title}</h3>
          <p class="text-gray-700 mb-4">{area.description}</p>
          <a href={area.link} class="inline-flex items-center text-blue-600 font-semibold hover:gap-3 gap-2 transition-all">
            {area.linkText}
            <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
            </svg>
          </a>
        </div>
      ))}
    </div>

    <!-- Expandable Locations Section -->
    <div class="expanded-locations hidden" id="expandedLocations">
      <div class="grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-6 py-8">
        {locationGroups.map((group) => (
          <div class="bg-white rounded-lg p-4">
            <h4 class="font-bold text-lg mb-3 text-gray-900">{group.title}</h4>
            <ul class="space-y-2">
              {group.locations.map((location) => (
                <li>
                  <a href={location.link} class="text-gray-600 hover:text-blue-600 transition-colors">
                    {location.name}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>

    <!-- View All Locations Button -->
    <div class="flex justify-center mt-8">
      <button 
        class="inline-flex items-center px-8 py-4 bg-blue-600 text-white font-bold rounded-lg hover:bg-gray-800 transition-colors locations-toggle"
        onclick="toggleLocations()"
        id="locationsToggle"
      >
        <span class="toggle-text">View All Locations</span>
        <svg class="w-5 h-5 ml-2 transition-transform toggle-icon" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
        </svg>
      </button>
    </div>
  </div>

  <script>
    function toggleLocations() {
      const expandedLocations = document.getElementById('expandedLocations');
      const toggleButton = document.getElementById('locationsToggle');
      const toggleText = toggleButton.querySelector('.toggle-text');
      const toggleIcon = toggleButton.querySelector('.toggle-icon');
      
      if (expandedLocations.classList.contains('hidden')) {
        expandedLocations.classList.remove('hidden');
        toggleText.textContent = 'Show Less Locations';
        toggleIcon.classList.add('rotate-180');
      } else {
        expandedLocations.classList.add('hidden');
        toggleText.textContent = 'View All Locations';
        toggleIcon.classList.remove('rotate-180');
      }
    }
  </script>
</section>