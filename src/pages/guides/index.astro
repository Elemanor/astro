---
import { getCollection } from 'astro:content';
import MainLayout from '../../layouts/MainLayout.astro';
import Hero from '../../components/ui/Hero.astro';
import Section from '../../components/ui/Section.astro';
import Grid from '../../components/ui/Grid.astro';
import ContentCard from '../../components/ui/ContentCard.astro';
import AstroButton from '../../components/ui/AstroButton.astro';
import AstroBadge from '../../components/ui/AstroBadge.astro';
import AstroCard from '../../components/ui/AstroCard.astro';
import { 
  BookOpen, 
  Calendar, 
  Droplets, 
  Home, 
  AlertCircle, 
  DollarSign, 
  Wrench,
  Calculator,
  Video,
  Phone,
  Filter,
  ChevronRight,
  Clock,
  Shield
} from 'lucide-react';

// Get all guides
const guides = await getCollection('guides');

// Sort alphabetically by title
const sortedGuides = guides.sort((a, b) => 
  a.data.title.localeCompare(b.data.title)
);

// Define guide categories with icons
const categories = [
  { id: 'seasonal', name: 'Seasonal Maintenance', icon: Calendar },
  { id: 'methods', name: 'Waterproofing Methods', icon: Droplets },
  { id: 'foundation', name: 'Foundation Protection', icon: Home },
  { id: 'emergency', name: 'Emergency Response', icon: AlertCircle },
  { id: 'cost', name: 'Cost & Planning', icon: DollarSign },
  { id: 'technical', name: 'Technical Guides', icon: Wrench }
];

// Categorize guides
const categorizedGuides = new Map();
categories.forEach(cat => categorizedGuides.set(cat.id, []));

sortedGuides.forEach(guide => {
  const title = guide.data.title.toLowerCase();
  const description = (guide.data.description || '').toLowerCase();
  
  if (title.includes('winter') || title.includes('spring') || title.includes('summer') || title.includes('fall') || title.includes('seasonal')) {
    categorizedGuides.get('seasonal').push(guide);
  } else if (title.includes('waterproofing') || title.includes('membrane') || title.includes('drainage')) {
    categorizedGuides.get('methods').push(guide);
  } else if (title.includes('foundation') || title.includes('crack') || title.includes('structural')) {
    categorizedGuides.get('foundation').push(guide);
  } else if (title.includes('emergency') || title.includes('flood') || title.includes('leak')) {
    categorizedGuides.get('emergency').push(guide);
  } else if (title.includes('cost') || title.includes('warranty') || title.includes('roi')) {
    categorizedGuides.get('cost').push(guide);
  } else {
    categorizedGuides.get('technical').push(guide);
  }
});

// Get popular guides (featured or most comprehensive)
const popularGuides = [
  guides.find(g => g.id.includes('seasonal-waterproofing-preparation')),
  guides.find(g => g.id.includes('interior-vs-exterior-waterproofing')),
  guides.find(g => g.id.includes('basement-waterproofing-warranty-guide')),
  guides.find(g => g.id.includes('toronto-spring-basement-protection-handbook-2025'))
].filter(Boolean).slice(0, 4);
---

<MainLayout 
  title="Waterproofing Guides - Expert Resources | DrySpace" 
  description="Comprehensive guides for basement waterproofing, foundation protection, and home maintenance. Learn from Toronto's waterproofing experts."
>
  <!-- Hero Section -->
  <Hero
    title="Expert Waterproofing Guides"
    subtitle="In-depth resources to protect your home"
    description="Learn from 25+ years of experience with comprehensive guides on waterproofing, foundation protection, and preventive maintenance"
    badge="DrySpace Resource Center"
    alignment="center"
    size="small"
  />
  
  <!-- Popular Guides -->
  {popularGuides.length > 0 && (
    <Section 
      title="Most Popular Guides"
      subtitle="Start with our most comprehensive resources"
      background="muted"
    >
      <Grid columns={2}>
        {popularGuides.map(guide => {
          const url = guide.data.url || `/guides/${guide.id}/`;
          const category = categories.find(cat => 
            categorizedGuides.get(cat.id).includes(guide)
          );
          
          return (
            <AstroCard class="hover:shadow-lg transition-shadow">
              <div class="flex gap-4">
                <div class="flex-shrink-0">
                  <div class="w-12 h-12 bg-secondary/10 rounded-lg flex items-center justify-center">
                    {category && category.id === 'seasonal' && (
                      <Calendar className="h-6 w-6 text-secondary" client:load />
                    )}
                    {category && category.id === 'methods' && (
                      <Droplets className="h-6 w-6 text-secondary" client:load />
                    )}
                    {category && category.id === 'foundation' && (
                      <Home className="h-6 w-6 text-secondary" client:load />
                    )}
                    {category && category.id === 'emergency' && (
                      <AlertCircle className="h-6 w-6 text-secondary" client:load />
                    )}
                    {category && category.id === 'cost' && (
                      <DollarSign className="h-6 w-6 text-secondary" client:load />
                    )}
                    {category && category.id === 'technical' && (
                      <Wrench className="h-6 w-6 text-secondary" client:load />
                    )}
                  </div>
                </div>
                <div class="flex-1">
                  <h3 class="font-semibold text-lg mb-2 line-clamp-2">
                    <a href={url} class="hover:text-secondary transition-colors">
                      {guide.data.title}
                    </a>
                  </h3>
                  <p class="text-muted-foreground text-sm mb-3 line-clamp-2">
                    {guide.data.description}
                  </p>
                  <a 
                    href={url} 
                    class="inline-flex items-center text-secondary hover:text-secondary/80 font-medium text-sm gap-1"
                  >
                    Read Guide
                    <ChevronRight className="h-4 w-4" client:load />
                  </a>
                </div>
              </div>
            </AstroCard>
          );
        })}
      </Grid>
    </Section>
  )}
  
  <!-- All Guides with Category Filter -->
  <Section>
    <div class="space-y-8">
      <!-- Category Filter -->
      <div class="flex flex-col sm:flex-row items-center justify-between gap-4 pb-6 border-b">
        <h2 class="text-2xl font-bold flex items-center gap-2">
          <BookOpen className="h-6 w-6 text-secondary" client:load />
          All Guides
        </h2>
        
        <div class="flex flex-wrap justify-center gap-2">
          <button 
            class="category-filter px-4 py-2 rounded-md bg-secondary text-secondary-foreground font-medium transition-all"
            data-category="all"
          >
            All Categories
          </button>
          {categories.map(category => (
            <button 
              class="category-filter px-4 py-2 rounded-md bg-muted text-muted-foreground hover:bg-muted/80 font-medium transition-all"
              data-category={category.id}
            >
              {category.name}
            </button>
          ))}
        </div>
      </div>
      
      <!-- Guides by Category -->
      {categories.map(category => {
        const guides = categorizedGuides.get(category.id);
        if (guides.length === 0) return null;
        
        return (
          <div class="guide-category" data-category={category.id}>
            <div class="flex items-center gap-3 mb-6">
              <div class="w-10 h-10 bg-secondary/10 rounded-lg flex items-center justify-center">
                {category.id === 'seasonal' && <Calendar className="h-5 w-5 text-secondary" client:load />}
                {category.id === 'methods' && <Droplets className="h-5 w-5 text-secondary" client:load />}
                {category.id === 'foundation' && <Home className="h-5 w-5 text-secondary" client:load />}
                {category.id === 'emergency' && <AlertCircle className="h-5 w-5 text-secondary" client:load />}
                {category.id === 'cost' && <DollarSign className="h-5 w-5 text-secondary" client:load />}
                {category.id === 'technical' && <Wrench className="h-5 w-5 text-secondary" client:load />}
              </div>
              <h3 class="text-xl font-bold">{category.name}</h3>
              <span class="text-sm text-muted-foreground">
                ({guides.length} guide{guides.length !== 1 ? 's' : ''})
              </span>
            </div>
            
            <Grid columns={2}>
              {guides.map(guide => {
                const url = guide.data.url || `/guides/${guide.id}/`;
                
                return (
                  <ContentCard
                    title={guide.data.title}
                    description={guide.data.description}
                    href={url}
                    type="guide"
                  />
                );
              })}
            </Grid>
          </div>
        );
      })}
    </div>
  </Section>
  
  <!-- Additional Resources -->
  <Section 
    title="Additional Resources"
    subtitle="Tools and support to help you make informed decisions"
    background="muted"
    centered
  >
    <Grid columns={3}>
      <AstroCard class="text-center hover:shadow-lg transition-shadow">
        <Calculator className="h-12 w-12 text-secondary mx-auto mb-4" client:load />
        <h3 class="font-bold text-lg mb-2">Cost Calculators</h3>
        <p class="text-muted-foreground text-sm mb-4">
          Estimate your project costs with our interactive tools
        </p>
        <AstroButton href="/tools/" variant="outline" size="sm" class="w-full">
          View Calculators
        </AstroButton>
      </AstroCard>
      
      <AstroCard class="text-center hover:shadow-lg transition-shadow">
        <Video className="h-12 w-12 text-secondary mx-auto mb-4" client:load />
        <h3 class="font-bold text-lg mb-2">Video Tutorials</h3>
        <p class="text-muted-foreground text-sm mb-4">
          Visual guides for common waterproofing procedures
        </p>
        <AstroButton href="/videos/" variant="outline" size="sm" class="w-full">
          Watch Videos
        </AstroButton>
      </AstroCard>
      
      <AstroCard class="text-center hover:shadow-lg transition-shadow">
        <Phone className="h-12 w-12 text-secondary mx-auto mb-4" client:load />
        <h3 class="font-bold text-lg mb-2">Expert Consultation</h3>
        <p class="text-muted-foreground text-sm mb-4">
          Get personalized advice from our waterproofing experts
        </p>
        <AstroButton href="/contact/" variant="outline" size="sm" class="w-full">
          Contact Us
        </AstroButton>
      </AstroCard>
    </Grid>
  </Section>
  
  <!-- Emergency CTA -->
  <Section background="destructive" spacing="small">
    <div class="text-center space-y-6">
      <div class="flex items-center justify-center gap-2 text-white mb-4">
        <AlertCircle className="h-8 w-8" client:load />
        <h2 class="text-3xl font-bold">Emergency Water Issues?</h2>
      </div>
      <p class="text-xl text-white/90 max-w-2xl mx-auto">
        Don't wait! Water damage gets worse by the hour. Get immediate help from our 24/7 emergency team.
      </p>
      <div class="flex flex-col sm:flex-row gap-4 justify-center">
        <AstroButton 
          href="tel:437-545-0067" 
          size="lg"
          class="bg-white text-destructive hover:bg-gray-100"
        >
          <Phone className="h-5 w-5" client:load />
          Call (437) 545-0067
        </AstroButton>
        <AstroButton 
          href="/emergency/" 
          variant="outline" 
          size="lg"
          class="border-white text-white hover:bg-white/10"
        >
          Emergency Services
        </AstroButton>
      </div>
    </div>
  </Section>
  
  <!-- Final CTA -->
  <Section spacing="large">
    <div class="text-center space-y-6">
      <h2 class="text-3xl font-bold">Ready to Protect Your Home?</h2>
      <p class="text-xl text-muted-foreground max-w-2xl mx-auto">
        While our guides provide valuable information, professional assessment ensures the right solution for your specific situation.
      </p>
      <div class="flex items-center justify-center gap-8 text-sm text-muted-foreground">
        <div class="flex items-center gap-2">
          <Clock className="h-5 w-5 text-secondary" client:load />
          <span>Free Inspection</span>
        </div>
        <div class="flex items-center gap-2">
          <Shield className="h-5 w-5 text-secondary" client:load />
          <span>Lifetime Warranty</span>
        </div>
        <div class="flex items-center gap-2">
          <Phone className="h-5 w-5 text-secondary" client:load />
          <span>24/7 Support</span>
        </div>
      </div>
      <AstroButton href="/contact/" size="lg" variant="secondary" class="gap-2">
        Get Professional Assessment
        <ChevronRight className="h-5 w-5" client:load />
      </AstroButton>
    </div>
  </Section>
  
  <script>
    // Category filtering with smooth transitions
    document.addEventListener('DOMContentLoaded', () => {
      const filters = document.querySelectorAll('.category-filter');
      const categories = document.querySelectorAll('.guide-category');
      
      filters.forEach(filter => {
        filter.addEventListener('click', () => {
          // Update active state
          filters.forEach(f => {
            f.classList.remove('bg-secondary', 'text-secondary-foreground');
            f.classList.add('bg-muted', 'text-muted-foreground');
          });
          filter.classList.remove('bg-muted', 'text-muted-foreground');
          filter.classList.add('bg-secondary', 'text-secondary-foreground');
          
          // Filter categories with animation
          const selectedCategory = filter.dataset.category;
          
          categories.forEach(category => {
            const shouldShow = selectedCategory === 'all' || 
              category.dataset.category === selectedCategory;
            
            if (shouldShow) {
              category.style.display = 'block';
              category.style.animation = 'fadeIn 0.3s ease-in-out';
            } else {
              category.style.animation = 'fadeOut 0.3s ease-in-out';
              setTimeout(() => {
                category.style.display = 'none';
              }, 300);
            }
          });
        });
      });
    });
  </script>
  
  <style>
    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    @keyframes fadeOut {
      from {
        opacity: 1;
        transform: translateY(0);
      }
      to {
        opacity: 0;
        transform: translateY(-10px);
      }
    }
    
    .line-clamp-2 {
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
  </style>
</MainLayout>