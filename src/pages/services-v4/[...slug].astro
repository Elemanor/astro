---
// Alternative service routing using modular components
// This is in a separate folder to avoid conflicts
import { getCollection } from 'astro:content';
import ServicePageTemplateV4 from '../../templates/ServicePageTemplateV4.astro';

// Get all service entries
export async function getStaticPaths() {
  const services = await getCollection('services');
  
  return services.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const { data } = entry;

// Extract data from frontmatter with defaults
const serviceName = data.title || "Professional Service";
const serviceTitle = data.meta_title || `${data.title} Toronto | DrySpace Waterproofing`;
const serviceSubtitle = data.subtitle || data.tagline || data.hero?.subtitle || "Professional Waterproofing & Foundation Solutions";
const serviceDescription = data.description || data.excerpt || "";

// Hero configuration
const heroBadge = data.hero?.badge || data.badge;
const heroImage = data.hero?.image || data.image;
const heroFeatures = data.hero?.features || data.features || [];

// Pricing information
const startingPrice = data.starting_price || data.pricing?.starting_price;
const priceRange = data.price_range || data.pricing?.price_range;

// Process steps
const processSteps = data.process_steps || data.process || [];

// Benefits
const benefits = data.benefits || [];

// Related services - with better formatting
const relatedServices = data.related_services?.map(service => ({
  title: service.title || service.name,
  url: service.url || `/services/${service.slug || service.title?.toLowerCase().replace(/\s+/g, '-')}/`,
  description: service.description || "",
  image: service.image
})) || [];

// FAQs
const serviceFaqs = data.faq || data.faqs || [];
---

<ServicePageTemplateV4
  serviceName={serviceName}
  serviceTitle={serviceTitle}
  serviceSubtitle={serviceSubtitle}
  serviceDescription={serviceDescription}
  heroBadge={heroBadge}
  heroImage={heroImage}
  heroFeatures={heroFeatures}
  startingPrice={startingPrice}
  priceRange={priceRange}
  processSteps={processSteps}
  benefits={benefits}
  relatedServices={relatedServices}
  serviceFaqs={serviceFaqs}
>
  <Fragment slot="mainContent">
    <Content />
  </Fragment>
</ServicePageTemplateV4>